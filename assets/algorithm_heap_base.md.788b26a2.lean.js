import{_ as t,o as a,c as o,k as e,a as s}from"./chunks/framework.b8955dba.js";const $=JSON.parse('{"title":"堆","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/heap/base.md","filePath":"algorithm/heap/base.md"}'),l={name:"algorithm/heap/base.md"},n=e("h1",{id:"堆",tabindex:"-1"},[s("堆 "),e("a",{class:"header-anchor",href:"#堆","aria-label":'Permalink to "堆"'},"​")],-1),r=e("p",null,"堆通常是一个可以被看做一棵树的数组对象。",-1),c=e("p",null,"堆的实现通过构造二叉堆，实为二叉树的一种。这种数据结构具有以下性质。",-1),i=e("ol",null,[e("li",null,"任意节点小于（或大于）它的所有子节点"),e("li",null,"堆总是一棵完全树。即除了最底层，其他层的节点都被元素填满，且最底层从左到右填入。")],-1),_=e("p",null,"将根节点最大的堆叫做最大堆或大根堆，根节点最小的堆叫做最小堆或小根堆。",-1),d=e("p",null,"优先队列也完全可以用堆来实现，操作是一模一样的。",-1),h=[n,r,c,i,_,d];function p(m,u,f,b,x,g){return a(),o("div",null,h)}const B=t(l,[["render",p]]);export{$ as __pageData,B as default};
