import{_ as e,o,c as i,V as a}from"./chunks/framework.b8955dba.js";const m=JSON.parse('{"title":"DNS解析流程","description":"","frontmatter":{},"headers":[],"relativePath":"browser/dns.md","filePath":"browser/dns.md"}'),s={name:"browser/dns.md"},t=a('<h1 id="dns解析流程" tabindex="-1">DNS解析流程 <a class="header-anchor" href="#dns解析流程" aria-label="Permalink to &quot;DNS解析流程&quot;">​</a></h1><p>DNS 的全拼是 Domain Name System，即域名系统 。它是互联网的一项核心服务，作为将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。域名比ip地址更容易记住。</p><p>当你在浏览器中输入一个网址（比如 www.example.com）并回车后，DNS 解析流程如下：</p><ol><li>浏览器缓存查找 浏览器首先会在自身的缓存中查找该网址对应的 IP 地址。如果能找到，就直接使用缓存中的 IP 地址与服务器建立连接，解析过程结束。这个缓存时间通常较短，不同浏览器设置有所差异。例如，Chrome 浏览器会根据 DNS 记录中的 TTL（生存时间）值来管理缓存，TTL 时间到了，缓存记录就会失效。</li><li>系统缓存查找 如果浏览器缓存中没有找到，操作系统会在本地的 DNS 缓存中查找。在 Windows 系统中，可以通过 ipconfig /displaydns 命令查看 DNS 缓存；在 Linux 系统中，不同的发行版管理缓存方式略有不同，如 systemd - resolved 服务可以管理 DNS 缓存。若系统缓存中有匹配的记录，就使用该 IP 地址，解析完成。</li><li>本地 DNS 服务器查询（递归查询） 若系统缓存也未找到，操作系统会向本地配置的 DNS 服务器（通常由你的网络服务提供商提供）发送查询请求。这是一个递归查询过程，意味着本地 DNS 服务器会代替客户端去查找该网址的 IP 地址。 本地 DNS 服务器首先会检查自己的缓存，如果有记录则直接返回给客户端。若没有，它会向根 DNS 服务器发起查询。</li><li>根 DNS 服务器查询（迭代查询） 根 DNS 服务器并不直接存储网址和 IP 地址的映射关系，而是知道顶级域名服务器的地址。顶级域名如 .com、.org、.net 等。根 DNS 服务器会返回负责该顶级域名的顶级域名服务器的地址给本地 DNS 服务器。这是一个迭代查询，根 DNS 服务器只是提供下一步查询的线索，而不是直接给出最终结果。</li><li>顶级域名服务器查询（迭代查询） 本地 DNS 服务器接着向顶级域名服务器发送查询请求。顶级域名服务器知道该域名的权威域名服务器的地址，会将其返回给本地 DNS 服务器。例如，对于 www.example.com，顶级域名服务器 .com 会告诉本地 DNS 服务器 example.com 的权威域名服务器地址。</li><li>权威域名服务器查询 本地 DNS 服务器向权威域名服务器发起查询。权威域名服务器保存着该域名的完整 DNS 记录，包括主机名到 IP 地址的映射。它会将查询到的 IP 地址返回给本地 DNS 服务器。</li><li>本地 DNS 服务器返回结果 本地 DNS 服务器收到权威域名服务器返回的 IP 地址后，一方面会将其返回给客户端，供客户端与目标服务器建立连接；另一方面，本地 DNS 服务器会将该记录缓存起来，以便下次有相同查询时可以直接返回结果，提高查询效率。</li><li>客户端获取 IP 地址并建立连接 客户端收到本地 DNS 服务器返回的 IP 地址后，就可以使用该 IP 地址与目标服务器建立 TCP 连接，进行网页数据的请求和传输。</li></ol>',4),l=[t];function S(n,r,N,D,c,d){return o(),i("div",null,l)}const p=e(s,[["render",S]]);export{m as __pageData,p as default};
